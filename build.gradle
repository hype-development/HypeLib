// Plugins
plugins {
    id 'java'
    id 'maven-publish'
}

// Project Repositories
repositories {
    // Maven Central
    mavenCentral()
    mavenLocal()

    // PaperMC
    maven { url = "https://repo.papermc.io/repository/maven-public/" }

    // Sonatype
    maven { url = "https://oss.sonatype.org/content/groups/public/" }

    // PlaceholderAPI
    maven { url = "https://repo.extendedclip.com/content/repositories/placeholderapi/" }

    // Maven2
    maven { url = "https://repo.maven.apache.org/maven2/" }
}

// Project Dependencies
dependencies {
    // PaperMC API
    compileOnly("io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT")

    // JetBrains Annotations
    compileOnly("org.jetbrains:annotations:24.1.0")

    // Lombok
    compileOnly('org.projectlombok:lombok:1.18.34')

    // PlaceholderAPI
    compileOnly("me.clip:placeholderapi:2.11.3")

    // ConfigLib
    compileOnly("de.exlll:configlib-yaml:4.5.0")

    annotationProcessor('org.projectlombok:lombok:1.18.34')

    // Sentinel
    compileOnly("me.joehosten:Sentinel:1.0-SNAPSHOT")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

// Java Compile
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

// Allow to build sources jar
tasks.register('sourcesJar', Jar) {
    dependsOn classes
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

// Artifact Information
artifacts {
    archives sourcesJar
}

// Tasks
tasks {
    build {
        dependsOn(sourcesJar)
    }
}

// Maven Publish (Local Repository)
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'games.negative.alumina'
            artifactId = 'alumina'
            version = '2.9.2'
            from components.java

            artifact sourcesJar {
                archiveClassifier.set("sources")
            }
        }
    }
}

